# Session 5

Focus: Constraints

Facilitator: Roland Germ [@rolgerm](https://twitter.com/rolgerm)

---

## What is a constraint

. . .

\
<span style="color:red;">COUNTABLE NOUN</span>

A **constraint** is something that limits or controls what you can do. 

---

## It slows us down

![](sessions/06_constraints/snail.jpg)

---

## It restricts our actions

![](sessions/06_constraints/challenge.jpg)

---

## Constraint 1  Baby Steps

1. Setup a timer for 5 (or lesser) minutes interval when you start.
1. Write exactly one test. When the timer rings:
        if test is red then delete and start over.
        if the test is green then continue.
1. Restart timer (no discussions in between timers)
1. Refactor. If the:
        timer rings and the refactoring is not complete then delete and start over.
        refactoring is complete before the timer rings then continue.
1. Restart the timer (no discussions in between timers)
1. Go to 3.


---

## Constraint 2 Silent/Mute Ping Pong

---

## Constraint 3 Evil Coder

The Driver is antagonistic: They will implement the code that makes the test pass, but may introduce as much complexity into the code as they wish or choose an obscure implementation strategy. This helps guide expressive test intent.

---

{{< include ./sessions/_pairing.qmd >}}

---

{{< include ./sessions/_learning_and_practicing.qmd >}}

---

{{< include ./sessions/_retrospective.qmd >}}

* Which constraint did you choose?
* What went well?
* What was your first test?
* Which role do you prefer, and why?


